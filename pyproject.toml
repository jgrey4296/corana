[project]
name            = "provenance"
version         = "0.0.1"
description     = "A library to pipeline analysis code and data"
readme          = "README.md"
requires-python = ">=3.10"
license         = {file = "LICENSE"}
keywords        = ["games", "ai", "provenance"]
authors         = [
    {email = "jgrey4296@gmail.com"},
    {name  = "J Grey"}
]
classifiers     = [
    "Programming Language :: Python :: 3.10"
]

##-- dependencies
dependencies   = [
    "pyparsing >= 3.0.9",
    "doot",
]

[project.optional-dependencies]
test = [
    "pytest > 7.0.0",
    "pytest-mock",
]
color = [
    "sty > 1.0.0",
]
visual = [
    "seaborn > 61.2.0",
    "railroad-diagrams >= 1.1.1"
]
numbers = [
    "numpy > 1.22.0",
]
exceptions = [
    "rich",
]
docs = [
    "sphinx > 4.4.0"
]

##-- end dependencies

[project.urls]
homepage      = "https://github.com/jgrey4296/provenance"
documentation = "https://readthedocs.org/provenance"
repository    = "https://github.com/jgrey4296/provenance"
changelog     = "https://github.com/jgrey4296/provenance/blob/master/CHANGELOG.md"

##-- scripts
[project.scripts]
# todo: add template generation scripts

[project.gui-scripts]
# spam-gui      = "spam:main_gui"

[project.entry-points."nothing"]
# tomatoes      = "spam:main_tomatoes"

##-- end scripts

##-- pytest
[tool.pytest.ini_options]
log_cli       = false
log_level     = "INFO"
log_cli_level = "WARN"
log_format    = "%(levelname)s %(name)s : %(message)s"

##-- end pytest

##-- build system
[build-system]
requires = [
         "setuptools >= 63.1.0",
         "wheel >= 0.37.1",
]

build-backend = "setuptools.build_meta"

[tool.setuptools]
# packages = []
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where = ["."]

[tool.setuptools.package-data]


[tool.setuptools.exclude-package-data]


##-- end build system

##-- pyright
[tool.pyright]
# strict = provenance.*
verboseOutput               = true
typeCheckingMode            = "strict"
pythonVersion               = "3.10"

reportUnusedImport          = false
reportAssertAlwaysTrue      = "information"
reportMissingParameterType  = "warning"
reportMissingTypeArgument   = "warning"
reportMissingTypeStubs      = "warning"
reportUnknownMemberType     = "warning"
reportUnknownParameterType  = "information"
reportUnknownVariableType   = "warning"
reportUnnecessaryCast       = "information"
reportUnnecessaryIsInstance = "warning"

##-- end pyright

[tool.bumpver]
current_version    = "0.1.0"
version_pattern    = "MAJOR.MINOR.PATCH"
commit_message     = "[bump]: version {old_version} -> {new_version}"
tag_message        = "{new_version}"
tag_scope          = "default"
# commit             = true
# tag                = true
# pre_commit_hook  = ""
# post_commit_hook = ""
# push             = true

[tool.bumpver.file_patterns]
"pyproject.toml"   = [
                   '^version\s+=\s+"{version}"',
                   '^current_version\s+=\s+"{version}"'
]
"provenance/__init__.py" = ['^__version__\s+=\s+"{version}"']
